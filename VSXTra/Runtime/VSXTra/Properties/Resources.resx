<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Attributes_UnknownDockingStyle" xml:space="preserve">
    <value>Unknown docking style: {0}.</value>
  </data>
  <data name="Attributes_UnknownPosition" xml:space="preserve">
    <value>Unknown relative position: {0}.</value>
  </data>
  <data name="CommandDispatcher_DuplicateChange" xml:space="preserve">
    <value>More than one change method declared for a command.</value>
  </data>
  <data name="CommandDispatcher_DuplicateExec" xml:space="preserve">
    <value>More than one exec method declared for a command.</value>
  </data>
  <data name="CommandDispatcher_DuplicateStatus" xml:space="preserve">
    <value>More than one status method declared for a command.</value>
  </data>
  <data name="CommandDispatcher_NoType" xml:space="preserve">
    <value>No command target information found for type {0}</value>
  </data>
  <data name="CommandHandler_NoGroupType" xml:space="preserve">
    <value>MenuCommandHandler type should be defined as a nested type in a type implementing the ICommandGroupProvider markup interface.</value>
  </data>
  <data name="CommandHandler_NoPackage" xml:space="preserve">
    <value>Package instance for ICommandGroupProvider cannot be obtained.</value>
  </data>
  <data name="CommandHandler_NoProvider" xml:space="preserve">
    <value>ICommandGroupProvider cannot be created.</value>
  </data>
  <data name="EventArgsRequired" xml:space="preserve">
    <value>EventArgs are required.</value>
  </data>
  <data name="ExceptionMessageFormat" xml:space="preserve">
    <value>Unknown format</value>
  </data>
  <data name="ExceptionMessageQEQS" xml:space="preserve">
    <value>Unsupported result from QEQS</value>
  </data>
  <data name="ExceptionMessageSaveFlag" xml:space="preserve">
    <value>Unsupported Save flag.</value>
  </data>
  <data name="General_ArraySizeShouldBeAtLeast1" xml:space="preserve">
    <value>Expecting an array of size greater than zero.</value>
  </data>
  <data name="General_MissingService" xml:space="preserve">
    <value>The service '{0}' must be installed for this feature to work.  Ensure that this service is available.</value>
  </data>
  <data name="ICommandGroupProvider_Expected" xml:space="preserve">
    <value>Only types implementing ICommandGroupProvider are accepted in the attribute.</value>
  </data>
  <data name="InOutParamCantBeNULL" xml:space="preserve">
    <value>Both in and out parameters can not be NULL</value>
  </data>
  <data name="InParamIllegal" xml:space="preserve">
    <value>In parameter may not be specified</value>
  </data>
  <data name="IToolbarProvider_Expected" xml:space="preserve">
    <value>Only types implementing IToolbarProvider are accepted in ToolbarAttribute.</value>
  </data>
  <data name="IUIContextGuidType_Expected" xml:space="preserve">
    <value>Only types implementing IUIContextGuidType are accepted in XtraProvideAutoLoad.</value>
  </data>
  <data name="IWindowKindGuidType_Expected" xml:space="preserve">
    <value>Only types implementing IWindowKindGuidType are accepted.</value>
  </data>
  <data name="PackageNotFound" xml:space="preserve">
    <value>&lt;Package type or package resource not found in the assembly.&gt;</value>
  </data>
  <data name="Package_CannotCreateToolWindow" xml:space="preserve">
    <value>Tool window cannot be created.</value>
  </data>
  <data name="Package_DuplicateService" xml:space="preserve">
    <value>The service {0} already exists in the service container.</value>
  </data>
  <data name="Package_InvalidInstanceID" xml:space="preserve">
    <value>Instance ID {0} is invalid.</value>
  </data>
  <data name="Package_InvalidToolWindowClass" xml:space="preserve">
    <value>CreateToolWindow only creates Tool Windows derived from ToolWindowPane.</value>
  </data>
  <data name="Package_SiteAlreadySet" xml:space="preserve">
    <value>A site has already been set on package {0}.</value>
  </data>
  <data name="Reg_NotifyAutoLoad" xml:space="preserve">
    <value>Autoload package:         {0}</value>
  </data>
  <data name="Reg_NotifyToolResource" xml:space="preserve">
    <value>ToolWindow:       {0}, {1}</value>
  </data>
  <data name="ResourceNotFound" xml:space="preserve">
    <value>&lt;Resources type or resource property not found.&gt;</value>
  </data>
  <data name="ToolWindow_PackageOnlySetByCreator" xml:space="preserve">
    <value>The package property of the tool window should only be set by the creator of the tool window.</value>
  </data>
  <data name="ToolWindow_TooLateToAddTool" xml:space="preserve">
    <value>toolClsid cannot be added after the Frame is created.\nAdd the toolClsid in the ToolWindow constructor.</value>
  </data>
  <data name="ToolWindow_TooLateToAddToolbar" xml:space="preserve">
    <value>Toolbar cannot be added after the Frame is created.\nAdd the ToolBar in the ToolWindow constructor.</value>
  </data>
  <data name="OutParamRequired" xml:space="preserve">
    <value>Out parameter can not be NULL</value>
  </data>
  <data name="BothInOutParamsIllegal" xml:space="preserve">
    <value>Both in and out parameters should not be specified</value>
  </data>
  <data name="ParamNotValidStringInList" xml:space="preserve">
    <value>Parameter must be valid string in list</value>
  </data>
  <data name="Package_PageNotDialogPage" xml:space="preserve">
    <value>The page class {0} must derive from DialogPage&lt;,&gt;.</value>
  </data>
  <data name="Reg_NotifyOptionPage" xml:space="preserve">
    <value>Option Page:      {0}\{1}</value>
  </data>
  <data name="Package_BadOptionName" xml:space="preserve">
    <value>The solution option name {0} is invalid.  It cannot contain '.', '/' or other special characters.</value>
  </data>
  <data name="Package_OptionNameUsed" xml:space="preserve">
    <value>The solution option name {0} is already used by this package.</value>
  </data>
  <data name="Package_PageCtorMissing" xml:space="preserve">
    <value>The page type {0} does not offer an empty constructor.</value>
  </data>
  <data name="Package_BadDialogPageType" xml:space="preserve">
    <value>The dialog page type {0} does not derive from DialogPage.</value>
  </data>
</root>